pipeline {    
    agent any    
    stages {
      stage("build & SonarQube analysis") {            
        steps {
          withSonarQubeEnv('df-sonar') {
            sh 'mvn clean package sonar:sonar'
           }
        }
       }
       stage("Quality Gate") {
         steps {
            timeout(time: 1, unit: 'HOURS') {
              waitForQualityGate abortPipeline: true
              }
            }
          }
       stage("Building Image"){
          steps{       
            sh 'bin/build'  
            sh 'docker build -t sivakumarsakkarai/demo-java:latest .'
          }
        }
       stage("Push Image"){
         steps{
            withDockerRegistry(credentialsId: 'dockerhub', url: 'https://hub.docker.com/') {
                sh 'docker push sivakumarsakkarai/demo-java:latest'
            }
         }
        }
    }
}
